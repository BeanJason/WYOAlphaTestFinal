type PaymentIntent {
  clientSecret: String!,
  id: String!
}

type Mutation {
  createPaymentIntent(amount: Int!, email: String!, jobID: String!): PaymentIntent! @function(name: "CreatePaymentIntent-${env}")
  refundPayment(isCancel: Boolean!, jobID: String!): Boolean! @function(name: "RefundPayment-${env}")
  sendNotification(token: String!, title: String!, message: String!, data: String): Boolean! @function(name: "SendNotification-${env}")
  sendEmail(userEmail: String!, subject: String!, message: String! ): String! @function(name: "SendEmail-${env}")
  contactUsFunction(name: String!, email: String!, message: String! ): String! @function(name: "ContactUsFunction-${env}")
}

enum JOBSTATUS {
  REQUESTED
  ACCEPTED
  IN_SERVICE
  COMPLETED
}

type Job @model @auth(rules: [{allow: public}]) {
  id: ID!
  jobTitle: String!
  jobDescription: String
  address: String!
  city: String!
  zipCode: String!
  latitude: String!
  longitude: String!
  duration: Int!
  requestDateTime: String!
  backupProviders: [String!]
  checkInTime: String
  checkOutTime: String
  currentStatus: JOBSTATUS!
  mainProvider: ID @index(name: "byProvider")
  requestOwner: ID! @index(name: "byUser")
  paymentID: String
  price: Int
  tip: Int,
  userNotificationID: [String!],
  providerNotificationID: [String!]
  markedToRemove: String
  isRated: String
}

type Provider @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  expoToken: String
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!
  dateOfBirth: AWSDate!
  address: String!
  biography: String!,
  profilePictureURL: String
  backgroundCheckStatus: Boolean!
  backgroundCheckDate: String
  employeeID: String!
  offenses: Int!
  overallRating: Float!
  isBan: Boolean!
  currentLocation: String
  jobs: [Job] @hasMany(indexName: "byProvider", fields: ["id"])
  review: Review @hasOne
}

type Review @model @auth(rules: [{allow: public}]){
  id: ID!
  reviews: [String!]
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  expoToken: String
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!
  dateOfBirth: AWSDate
  address: [String!]
  contactMethod: String
  jobs: [Job] @hasMany(indexName: "byUser", fields: ["id"])
}

type Code @model @auth(rules: [{allow: public}]) {
  id: ID!
  zipCode: String!
  city: String!
  count: Int!
}

type Manager @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  expoToken: String
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!
}

type Blacklist @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!,
}
 